spring.datasource.url=jdbc:mysql://localhost/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#usado para o jpa gerar automaticamento o schema e aplicar na criacao do banco
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=update


#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create


#faz o jpa criar um arquivo ddlV5__criacao_tabelas_pedido.sql com tudo que ele usou para mapear o banco, util para subir migrations
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl_jpa_generate.sql

#flyway achar os arquivos
spring.flyway.locations=classpath:db/migration,classpath:db/teste-data

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

#isso serve para falhar sempre que em uma requisicao json
#receber argumentos que nao sao aceitos, ex: em um put de restaurante receber o campo
#descricao, sendo que nao tenho esse campo na model
spring.jackson.deserialization.fail-on-unknown-properties=true


#a nao deixa inserir os campos se eles estiverem com o JsonIgnore
spring.jackson.deserialization.fail-on-ignored-properties=true


#isso faz com que o spring lance uma exception quando um caminho que nao existe
#seja requisitado
spring.mvc.throw-exception-if-no-handler-found=true
#esse aqui desabilita arquivos staticos que podem atrapalhar nas requisicoes de path
spring.web.resources.add-mappings=false




#serve para mudar o tamanho maximo da requisicao por arquivo, padarao 1 mb
#spring.servlet.multipart.max-file-size=20KB
#tamanho maximo da requicisao completa, padrao 10mb
#spring.servlet.multipart.max-request-size=20MB



#minhas proprias variaveis
algafood.storage.local=/Users/pinheiro/Downloads/download_testes



